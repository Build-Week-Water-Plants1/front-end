{"version":3,"sources":["util/axiosWithAuth.js","components/Login.js","components/Register.js","actions/index.js","components/NavBar.js","components/PlantForm.js","components/PlantsDisplay.js","components/Logout.js","components/PrivateRoute.js","App.js","reducers/index.js","index.js"],"names":["axiosWithAuth","token","window","localStorage","getItem","console","log","axios","create","baseURL","headers","Authorization","Login","props","history","useHistory","className","onSubmit","event","preventDefault","post","currentUser","then","res","setItem","data","jwt_token","setCurrentUser","id","push","catch","err","message","type","name","value","username","placeholder","onChange","persist","handleUserChange","password","connect","PostRegister","dispatch","payload","useState","formState","setFormState","changeHandler","e","target","Number","onClick","getFriend","NavBar","to","PlantForm","formSchema","yup","shape","required","url","blankPlant","nickname","H2Ofrequency","image","species_name","user_id","newPlant","setNewPlant","newPlantValidity","setNewPlantValidity","useEffect","isValid","valid","handleChange","handleSubmit","alert","class","PlantsDisplay","userPlants","setUserPlants","get","map","plant","key","src","alt","Logout","state","navigate","logout","clear","setState","this","Button","variant","Component","PrivateRoute","component","rest","render","App","exact","path","RegisterForm","initialState","store","createStore","action","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.aa4224bb.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const axiosWithAuth = () => {\r\n  const token = window.localStorage.getItem(\"token\");\r\n  console.log(`Token is ${token}`)\r\n\r\n  return axios.create({\r\n    baseURL: \"https://water-my-plants3.herokuapp.com/api\",\r\n    headers: {\r\n      Authorization: token\r\n    }\r\n  });\r\n};\r\n\r\n\r\n","import React from \"react\";\r\nimport {axiosWithAuth} from \"../util/axiosWithAuth\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n    const history = useHistory();\r\n\r\n    const login = event => {\r\n        event.preventDefault();\r\n        axiosWithAuth()\r\n            .post(\"/auth/login\", props.currentUser)\r\n            .then(res => {\r\n                window.localStorage.setItem(\"token\", res.data.jwt_token);\r\n                console.log(res.data.jwt_token);\r\n                props.setCurrentUser({...props.currentUser, id: res.data.id})\r\n                console.log(res);\r\n                history.push(\"/plantsform\");\r\n            })\r\n            .catch(err => {\r\n                console.log(err.message);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-center \">\r\n            <form onSubmit={login}>\r\n                <input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    value={props.currentUser.username}\r\n                    placeholder=\"Username\"\r\n                    onChange={(event) => {\r\n                        event.persist();\r\n                        props.handleUserChange(event)\r\n                    }}\r\n                />\r\n                <input\r\n                    className=\"form-control\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={props.currentUser.password}\r\n                    placeholder=\"Password\"\r\n                    onChange={(event) => {\r\n                        event.persist();\r\n                        props.handleUserChange(event)\r\n                    }}\r\n                />\r\n                <button className=\"btn btn-primary btn-lg btn-block mt-3\">Log in</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, {useState} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PostRegister } from \"../actions/index\";\r\n\r\nconst RegisterForm = (props) => {\r\n    const [formState, setFormState] = useState({\r\n    \"username\": \"\",\r\n\t\"password\": \"\",\r\n\t\"Number\": \"\"\r\n    });\r\n\r\n    const changeHandler = e => {\r\n        console.log(formState);\r\n        setFormState({\r\n            ...formState,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        props.history.push('/login');\r\n        props.PostRegister(formState);\r\n        \r\n        setFormState({\r\n\r\n            \"username\": \"\",\r\n            \"password\": \"\",\r\n            \"Number\": \"\"\r\n\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-center \">\r\n        <form onSubmit={submitHandler}>\r\n            <h1>Register Here</h1>\r\n\r\n            <input className=\"form-control\" name=\"username\" placeholder=\"username\" \r\n            value={formState.username} onChange={changeHandler}/>\r\n\r\n            <input className=\"form-control\"name=\"password\" placeholder=\"password\" \r\n            value={formState.password} onChange={changeHandler}/>\r\n\r\n            <input className=\"form-control\"name=\"Number\" placeholder=\"number\" \r\n            value={formState.Number} onChange={changeHandler}/>\r\n\r\n            <button className=\"btn btn-block btn-primary mt-3\" type=\"submit\" onClick={props.getFriend}>Submit</button>\r\n        </form>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default connect(null, { PostRegister: PostRegister })(RegisterForm);","import { axiosWithAuth } from \"../util/axiosWithAuth\";\r\n\r\nexport const PostRegister = (data) => {\r\n    return dispatch => {\r\n        axiosWithAuth()\r\n            .post(\"/register\", data)\r\n            .then(res => {\r\n                console.log(res.data)\r\n                dispatch({ type: \"POST_REGISTER\", payload: res.data })\r\n            })\r\n            .catch(err => console.log(\"Error!!!\", err));\r\n    }\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function NavBar() {\r\n    return(\r\n\r\n<ul className=\"mr-5 justify-content-center\">\r\n          <li className=\"list-group-item\">\r\n            <Link to=\"/register\">Register</Link>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n            <Link to=\"/login\">Login</Link>\r\n          </li>\r\n    </ul> )\r\n}","/***************\r\n LIBRARIES\r\n ***************/\r\nimport React, {useState, useEffect} from 'react';\r\nimport * as yup from 'yup';\r\nimport {axiosWithAuth} from \"../util/axiosWithAuth\";\r\n\r\n\r\nconst PlantForm = (props) => {\r\n    /***************\r\n     VALIDATION\r\n     ***************/\r\n    const formSchema = yup.object().shape({\r\n        \"nickname\": yup.string().required(\"Nickname is a required field.\"),\r\n        \"species_name\": yup.string().required(\"Species name is a required field.\"),\r\n        \"H2Ofrequency\": yup.string().required(\"You must describe how often to water your plant\"),\r\n        \"image\": yup.string().url().required(\"must include a plant image URL\")\r\n    });\r\n\r\n    /***************\r\n     HOOKS\r\n     ***************/\r\n        //set a blank plant as the initial state....this is mainly so that the user_id can be set\r\n    const blankPlant = {\r\n        nickname: \"\",\r\n        H2Ofrequency: \"\",\r\n        image: \"\",\r\n        species_name: \"\",\r\n        user_id: props.currentUser.id\r\n    }\r\n\r\n    const [newPlant, setNewPlant] = useState(blankPlant);\r\n\r\n    //create state to track whether the user's inputs to the forms are valid according to Yup; initially false b/c empty inputs = invalid\r\n    const [newPlantValidity, setNewPlantValidity] = useState(false);\r\n    //check validity every time the state of the inputs changes and set to true once Yup validation passes\r\n    useEffect(() => {\r\n        formSchema.isValid(newPlant).then(valid => {\r\n            setNewPlantValidity(valid);\r\n        })\r\n    }, [newPlant, formSchema])\r\n\r\n\r\n    /***************\r\n     EVENT HANDLERS\r\n     ***************/\r\n        //handle changes to the form inputs\r\n    const handleChange = (event) => {\r\n        setNewPlant({...newPlant, [event.target.name]: event.target.value})\r\n        console.log(newPlant);\r\n    }\r\n\r\n    //handle submission of the completed form\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        //if inputs pass Yup validation, post them to the server to be permanently added as a new plant\r\n        if (newPlantValidity === true) {\r\n            console.log(props.currentUser.id);\r\n            console.log(newPlant);\r\n            axiosWithAuth()\r\n                .post(`/users/${props.currentUser.id}/plants`, newPlant)\r\n                .then(res => {\r\n                    console.log(newPlant);\r\n                    console.log(res);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err.message);\r\n                });\r\n            setNewPlant({...blankPlant})\r\n            //if inputs fail Yup validation, warn user need valid inputs\r\n        } else {\r\n            alert(\"You must validly complete all inputs before submitting\");\r\n        }\r\n    }\r\n\r\n\r\n    /***************\r\n     DISPLAY\r\n     ***************/\r\n    return (\r\n        <div>\r\n        <form onSubmit={handleSubmit}>\r\n            <h1>Add a New Plant!</h1>\r\n            <div class=\"form-group\">Nickname: <input type='text' name={'nickname'} value={newPlant.nickname} onChange={handleChange}/>\r\n            </div>\r\n            <div class=\"form-group\">Species: <input type='text' name={'species_name'} value={newPlant.species_name}\r\n                                 onChange={handleChange}/></div>\r\n            <div class=\"form-group\">How Often To Water Your Plant: <input type='text' name={'H2Ofrequency'} value={newPlant.H2Ofrequency}\r\n                                                       onChange={handleChange}/></div>\r\n            <div class=\"form-group\">Image (URL): <input type=\"url\" name={'image'} value={newPlant.image} onChange={handleChange}/></div>\r\n            <button class=\"btn btn-primary\" onClick={handleSubmit}>Submit</button>\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n/***************\r\n EXPORTS\r\n ***************/\r\nexport default PlantForm;\r\n","/***************\r\n LIBRARIES\r\n ***************/\r\nimport React, {useEffect, useState} from 'react'\r\nimport {axiosWithAuth} from \"../util/axiosWithAuth\";\r\n\r\n\r\nconst PlantsDisplay = props => {\r\n\r\n    /***************\r\n     HOOKS\r\n     ***************/\r\n        //state which tracks the user's plants (received from the server)\r\n    const [userPlants, setUserPlants] = useState([]);\r\n\r\n    //get the user's plants from the server and set them to state\r\n    useEffect(() => {\r\n        axiosWithAuth()\r\n            .get(`/users/${props.currentUser.id}/plants`)\r\n            .then(res => {\r\n                setUserPlants(res.data);\r\n                console.log(res);\r\n            })\r\n            .catch(err => {\r\n                console.log(err.message);\r\n            });\r\n    }, [props.currentUser.id]);\r\n\r\n\r\n    /***************\r\n     DISPLAY\r\n     ***************/\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <h2>Your Plants:</h2>\r\n\r\n            {userPlants.map((plant) =>\r\n                <div key={plant.id}>\r\n                    <img class=\"img-fluid\" src={plant.image} alt={`${plant.nickname}`}/>\r\n                    <ul className=\"list-group\">\r\n                        <li class=\"list-group-item\">Nickname: {plant.nickname} </li>\r\n                        <li class=\"list-group-item\">Species: {plant.species_name} </li>\r\n                        <li class=\"list-group-item\">How often to water: {plant.H2Ofrequency}</li>\r\n                    </ul>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n/***************\r\n EXPORTS\r\n ***************/\r\nexport default PlantsDisplay;\r\n\r\n","import React, {Component} from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nclass Logout extends Component {\r\n    state = {\r\n        navigate: false\r\n    };\r\n\r\n    logout = () => {\r\n        window.localStorage.clear(\"token\");\r\n        this.setState({ navigate: true});\r\n    };\r\n\r\n    render() {\r\n        const {navigate} = this.state;\r\n\r\n        if (navigate) {\r\n            return <Redirect to=\"/login\" push={true} />;\r\n        }\r\n        return <Button  variant=\"primary\" onClick={this.logout}>Log out</Button>;\r\n    }\r\n}\r\n\r\nexport default Logout;\r\n\r\n\r\n","  \r\nimport React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (window.localStorage.getItem(\"token\")) {\r\n          return <Component {...props} />;\r\n        } else {\r\n          return <Redirect to=\"/login\" />;\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;","/***************\r\n LIBRARIES\r\n ***************/\r\nimport { BrowserRouter as Router, Route,} from \"react-router-dom\";\r\nimport React, { useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\n/***************\r\n COMPONENTS\r\n ***************/\r\nimport Login from \"./components/Login\";\r\nimport RegisterForm from \"./components/Register\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport PlantForm from \"./components/PlantForm\";\r\nimport PlantsDisplay from \"./components/PlantsDisplay\";\r\nimport Logout from \"./components/Logout\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\n\r\n\r\n\r\n/***************\r\n MAIN COMPONENT\r\n ***************/\r\nfunction App() {\r\n  /***************\r\n     HOOKS\r\n     ***************/\r\n  const [currentUser, setCurrentUser] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    id: null\r\n  });\r\n\r\n  /***************\r\n     EVENT HANDLERS\r\n     ***************/\r\n  const handleUserChange = event => {\r\n    setCurrentUser({\r\n      ...currentUser,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  /***************\r\n     DISPLAY & ROUTING\r\n     ***************/\r\n  return (\r\n    <Router>\r\n      <div className=\"App container-fluid p-5 mt-5\">\r\n        <div className=\"d-flex justify-content-center\">\r\n          <h1>Water My Plants</h1>\r\n        </div>\r\n        <NavBar />\r\n        <Route exact path=\"/\" component={NavBar} />\r\n        <Route exact path=\"/register\" component={RegisterForm} />\r\n        <Route exact path=\"/login\" component={Login}>\r\n          <Login\r\n            currentUser={currentUser}\r\n            handleUserChange={handleUserChange}\r\n            setCurrentUser={setCurrentUser}\r\n          />\r\n        </Route>\r\n\r\n        <PrivateRoute exact path=\"/plantsform\">\r\n          <Logout setCurrentUser={setCurrentUser} />\r\n        </PrivateRoute>\r\n        <PrivateRoute exact path=\"/plantsform\">\r\n          <PlantsDisplay currentUser={currentUser} />\r\n        </PrivateRoute>\r\n        <PrivateRoute exact path=\"/plantsform\">\r\n          <PlantForm currentUser={currentUser} />\r\n        </PrivateRoute>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const initialState = [];\r\nexport const reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case \"POST_REGISTER\":\r\n            return [ ...state, action.payload ]\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nimport thunk from 'redux-thunk';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { reducer } from './reducers';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk)); \r\n\r\n\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n<App />\r\n</Provider>, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}